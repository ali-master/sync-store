# Disable protected mode for containerized environments.
# Protected mode is a security feature that requires binding Redis
# to a trusted network interface, but in Docker, I usually disable it
# to allow external connections.
protected-mode no

# Set a higher frequency for internal operations such as closing
# connections or evicting expired keys. Default is 10; raising to 50–100
# can reduce latency, but also slightly increases CPU usage.
hz 50

# Turn off saving Redis data to disk. This avoids overhead from
# snapshotting (RDB) and ensures maximum throughput by treating Redis
# as an in-memory cache. If the container restarts, all data is lost.
save ""

# Disable append-only file (AOF). AOF provides more durable persistence
# but lowers throughput. I disable it for speed at the cost of data durability.
appendonly no

# Set memory limit to prevent Redis from using more than 1GB.
# Adjust this value based on your server’s resources.
maxmemory 1gb

# When max memory is reached, all keys are eligible for eviction.
maxmemory-policy noeviction

# Don’t stop writes if a background save fails. This is helpful
# in ephemeral environments where I don’t strictly care about on-disk data integrity.
stop-writes-on-bgsave-error no

# Bind to all interfaces within Docker containers. In production,
# I suggest restricting this for security or using Docker’s network settings.
bind 0.0.0.0

# Number of databases. I leave this as 16 by default, but if you expect
# a high number of separate data namespaces, increase or decrease it.
databases 16

# TCP Keepalive. Helps detect broken clients more quickly.
tcp-keepalive 300

# Disable RDB auto-merge. The act of merging can create unexpected overhead
# in ephemeral environments; if I'm not using RDB at all, this is irrelevant
# but included here for completeness.
rdbcompression no
rdbchecksum no

# Slowlog to record queries exceeding a threshold.
# The slowlog can help you debug performance bottlenecks.
# slowlog-log-slower-than 10000  # microseconds
slowlog-max-len 128

# Logging verbosity. “notice” is a good balance.
# “debug” can clutter the log and impact performance under heavy load.
loglevel notice
